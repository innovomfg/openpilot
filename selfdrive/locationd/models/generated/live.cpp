#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1414364393616267060) {
   out_1414364393616267060[0] = 0;
   out_1414364393616267060[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1414364393616267060[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1414364393616267060[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1414364393616267060[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1414364393616267060[5] = -sin(in_vec[1]);
   out_1414364393616267060[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1414364393616267060[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1414364393616267060[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1414364393616267060[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1414364393616267060[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1414364393616267060[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1414364393616267060[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1414364393616267060[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1414364393616267060[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1414364393616267060[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1414364393616267060[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1414364393616267060[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8526993589485217283) {
   out_8526993589485217283[0] = delta_x[0] + nom_x[0];
   out_8526993589485217283[1] = delta_x[1] + nom_x[1];
   out_8526993589485217283[2] = delta_x[2] + nom_x[2];
   out_8526993589485217283[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8526993589485217283[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8526993589485217283[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8526993589485217283[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8526993589485217283[7] = delta_x[6] + nom_x[7];
   out_8526993589485217283[8] = delta_x[7] + nom_x[8];
   out_8526993589485217283[9] = delta_x[8] + nom_x[9];
   out_8526993589485217283[10] = delta_x[9] + nom_x[10];
   out_8526993589485217283[11] = delta_x[10] + nom_x[11];
   out_8526993589485217283[12] = delta_x[11] + nom_x[12];
   out_8526993589485217283[13] = delta_x[12] + nom_x[13];
   out_8526993589485217283[14] = delta_x[13] + nom_x[14];
   out_8526993589485217283[15] = delta_x[14] + nom_x[15];
   out_8526993589485217283[16] = delta_x[15] + nom_x[16];
   out_8526993589485217283[17] = delta_x[16] + nom_x[17];
   out_8526993589485217283[18] = delta_x[17] + nom_x[18];
   out_8526993589485217283[19] = delta_x[18] + nom_x[19];
   out_8526993589485217283[20] = delta_x[19] + nom_x[20];
   out_8526993589485217283[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5446140761574181847) {
   out_5446140761574181847[0] = -nom_x[0] + true_x[0];
   out_5446140761574181847[1] = -nom_x[1] + true_x[1];
   out_5446140761574181847[2] = -nom_x[2] + true_x[2];
   out_5446140761574181847[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5446140761574181847[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5446140761574181847[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5446140761574181847[6] = -nom_x[7] + true_x[7];
   out_5446140761574181847[7] = -nom_x[8] + true_x[8];
   out_5446140761574181847[8] = -nom_x[9] + true_x[9];
   out_5446140761574181847[9] = -nom_x[10] + true_x[10];
   out_5446140761574181847[10] = -nom_x[11] + true_x[11];
   out_5446140761574181847[11] = -nom_x[12] + true_x[12];
   out_5446140761574181847[12] = -nom_x[13] + true_x[13];
   out_5446140761574181847[13] = -nom_x[14] + true_x[14];
   out_5446140761574181847[14] = -nom_x[15] + true_x[15];
   out_5446140761574181847[15] = -nom_x[16] + true_x[16];
   out_5446140761574181847[16] = -nom_x[17] + true_x[17];
   out_5446140761574181847[17] = -nom_x[18] + true_x[18];
   out_5446140761574181847[18] = -nom_x[19] + true_x[19];
   out_5446140761574181847[19] = -nom_x[20] + true_x[20];
   out_5446140761574181847[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5432513086891330118) {
   out_5432513086891330118[0] = 1.0;
   out_5432513086891330118[1] = 0;
   out_5432513086891330118[2] = 0;
   out_5432513086891330118[3] = 0;
   out_5432513086891330118[4] = 0;
   out_5432513086891330118[5] = 0;
   out_5432513086891330118[6] = 0;
   out_5432513086891330118[7] = 0;
   out_5432513086891330118[8] = 0;
   out_5432513086891330118[9] = 0;
   out_5432513086891330118[10] = 0;
   out_5432513086891330118[11] = 0;
   out_5432513086891330118[12] = 0;
   out_5432513086891330118[13] = 0;
   out_5432513086891330118[14] = 0;
   out_5432513086891330118[15] = 0;
   out_5432513086891330118[16] = 0;
   out_5432513086891330118[17] = 0;
   out_5432513086891330118[18] = 0;
   out_5432513086891330118[19] = 0;
   out_5432513086891330118[20] = 0;
   out_5432513086891330118[21] = 0;
   out_5432513086891330118[22] = 1.0;
   out_5432513086891330118[23] = 0;
   out_5432513086891330118[24] = 0;
   out_5432513086891330118[25] = 0;
   out_5432513086891330118[26] = 0;
   out_5432513086891330118[27] = 0;
   out_5432513086891330118[28] = 0;
   out_5432513086891330118[29] = 0;
   out_5432513086891330118[30] = 0;
   out_5432513086891330118[31] = 0;
   out_5432513086891330118[32] = 0;
   out_5432513086891330118[33] = 0;
   out_5432513086891330118[34] = 0;
   out_5432513086891330118[35] = 0;
   out_5432513086891330118[36] = 0;
   out_5432513086891330118[37] = 0;
   out_5432513086891330118[38] = 0;
   out_5432513086891330118[39] = 0;
   out_5432513086891330118[40] = 0;
   out_5432513086891330118[41] = 0;
   out_5432513086891330118[42] = 0;
   out_5432513086891330118[43] = 0;
   out_5432513086891330118[44] = 1.0;
   out_5432513086891330118[45] = 0;
   out_5432513086891330118[46] = 0;
   out_5432513086891330118[47] = 0;
   out_5432513086891330118[48] = 0;
   out_5432513086891330118[49] = 0;
   out_5432513086891330118[50] = 0;
   out_5432513086891330118[51] = 0;
   out_5432513086891330118[52] = 0;
   out_5432513086891330118[53] = 0;
   out_5432513086891330118[54] = 0;
   out_5432513086891330118[55] = 0;
   out_5432513086891330118[56] = 0;
   out_5432513086891330118[57] = 0;
   out_5432513086891330118[58] = 0;
   out_5432513086891330118[59] = 0;
   out_5432513086891330118[60] = 0;
   out_5432513086891330118[61] = 0;
   out_5432513086891330118[62] = 0;
   out_5432513086891330118[63] = 0;
   out_5432513086891330118[64] = 0;
   out_5432513086891330118[65] = 0;
   out_5432513086891330118[66] = -0.5*state[4];
   out_5432513086891330118[67] = -0.5*state[5];
   out_5432513086891330118[68] = -0.5*state[6];
   out_5432513086891330118[69] = 0;
   out_5432513086891330118[70] = 0;
   out_5432513086891330118[71] = 0;
   out_5432513086891330118[72] = 0;
   out_5432513086891330118[73] = 0;
   out_5432513086891330118[74] = 0;
   out_5432513086891330118[75] = 0;
   out_5432513086891330118[76] = 0;
   out_5432513086891330118[77] = 0;
   out_5432513086891330118[78] = 0;
   out_5432513086891330118[79] = 0;
   out_5432513086891330118[80] = 0;
   out_5432513086891330118[81] = 0;
   out_5432513086891330118[82] = 0;
   out_5432513086891330118[83] = 0;
   out_5432513086891330118[84] = 0;
   out_5432513086891330118[85] = 0;
   out_5432513086891330118[86] = 0;
   out_5432513086891330118[87] = 0.5*state[3];
   out_5432513086891330118[88] = 0.5*state[6];
   out_5432513086891330118[89] = -0.5*state[5];
   out_5432513086891330118[90] = 0;
   out_5432513086891330118[91] = 0;
   out_5432513086891330118[92] = 0;
   out_5432513086891330118[93] = 0;
   out_5432513086891330118[94] = 0;
   out_5432513086891330118[95] = 0;
   out_5432513086891330118[96] = 0;
   out_5432513086891330118[97] = 0;
   out_5432513086891330118[98] = 0;
   out_5432513086891330118[99] = 0;
   out_5432513086891330118[100] = 0;
   out_5432513086891330118[101] = 0;
   out_5432513086891330118[102] = 0;
   out_5432513086891330118[103] = 0;
   out_5432513086891330118[104] = 0;
   out_5432513086891330118[105] = 0;
   out_5432513086891330118[106] = 0;
   out_5432513086891330118[107] = 0;
   out_5432513086891330118[108] = -0.5*state[6];
   out_5432513086891330118[109] = 0.5*state[3];
   out_5432513086891330118[110] = 0.5*state[4];
   out_5432513086891330118[111] = 0;
   out_5432513086891330118[112] = 0;
   out_5432513086891330118[113] = 0;
   out_5432513086891330118[114] = 0;
   out_5432513086891330118[115] = 0;
   out_5432513086891330118[116] = 0;
   out_5432513086891330118[117] = 0;
   out_5432513086891330118[118] = 0;
   out_5432513086891330118[119] = 0;
   out_5432513086891330118[120] = 0;
   out_5432513086891330118[121] = 0;
   out_5432513086891330118[122] = 0;
   out_5432513086891330118[123] = 0;
   out_5432513086891330118[124] = 0;
   out_5432513086891330118[125] = 0;
   out_5432513086891330118[126] = 0;
   out_5432513086891330118[127] = 0;
   out_5432513086891330118[128] = 0;
   out_5432513086891330118[129] = 0.5*state[5];
   out_5432513086891330118[130] = -0.5*state[4];
   out_5432513086891330118[131] = 0.5*state[3];
   out_5432513086891330118[132] = 0;
   out_5432513086891330118[133] = 0;
   out_5432513086891330118[134] = 0;
   out_5432513086891330118[135] = 0;
   out_5432513086891330118[136] = 0;
   out_5432513086891330118[137] = 0;
   out_5432513086891330118[138] = 0;
   out_5432513086891330118[139] = 0;
   out_5432513086891330118[140] = 0;
   out_5432513086891330118[141] = 0;
   out_5432513086891330118[142] = 0;
   out_5432513086891330118[143] = 0;
   out_5432513086891330118[144] = 0;
   out_5432513086891330118[145] = 0;
   out_5432513086891330118[146] = 0;
   out_5432513086891330118[147] = 0;
   out_5432513086891330118[148] = 0;
   out_5432513086891330118[149] = 0;
   out_5432513086891330118[150] = 0;
   out_5432513086891330118[151] = 0;
   out_5432513086891330118[152] = 0;
   out_5432513086891330118[153] = 1.0;
   out_5432513086891330118[154] = 0;
   out_5432513086891330118[155] = 0;
   out_5432513086891330118[156] = 0;
   out_5432513086891330118[157] = 0;
   out_5432513086891330118[158] = 0;
   out_5432513086891330118[159] = 0;
   out_5432513086891330118[160] = 0;
   out_5432513086891330118[161] = 0;
   out_5432513086891330118[162] = 0;
   out_5432513086891330118[163] = 0;
   out_5432513086891330118[164] = 0;
   out_5432513086891330118[165] = 0;
   out_5432513086891330118[166] = 0;
   out_5432513086891330118[167] = 0;
   out_5432513086891330118[168] = 0;
   out_5432513086891330118[169] = 0;
   out_5432513086891330118[170] = 0;
   out_5432513086891330118[171] = 0;
   out_5432513086891330118[172] = 0;
   out_5432513086891330118[173] = 0;
   out_5432513086891330118[174] = 0;
   out_5432513086891330118[175] = 1.0;
   out_5432513086891330118[176] = 0;
   out_5432513086891330118[177] = 0;
   out_5432513086891330118[178] = 0;
   out_5432513086891330118[179] = 0;
   out_5432513086891330118[180] = 0;
   out_5432513086891330118[181] = 0;
   out_5432513086891330118[182] = 0;
   out_5432513086891330118[183] = 0;
   out_5432513086891330118[184] = 0;
   out_5432513086891330118[185] = 0;
   out_5432513086891330118[186] = 0;
   out_5432513086891330118[187] = 0;
   out_5432513086891330118[188] = 0;
   out_5432513086891330118[189] = 0;
   out_5432513086891330118[190] = 0;
   out_5432513086891330118[191] = 0;
   out_5432513086891330118[192] = 0;
   out_5432513086891330118[193] = 0;
   out_5432513086891330118[194] = 0;
   out_5432513086891330118[195] = 0;
   out_5432513086891330118[196] = 0;
   out_5432513086891330118[197] = 1.0;
   out_5432513086891330118[198] = 0;
   out_5432513086891330118[199] = 0;
   out_5432513086891330118[200] = 0;
   out_5432513086891330118[201] = 0;
   out_5432513086891330118[202] = 0;
   out_5432513086891330118[203] = 0;
   out_5432513086891330118[204] = 0;
   out_5432513086891330118[205] = 0;
   out_5432513086891330118[206] = 0;
   out_5432513086891330118[207] = 0;
   out_5432513086891330118[208] = 0;
   out_5432513086891330118[209] = 0;
   out_5432513086891330118[210] = 0;
   out_5432513086891330118[211] = 0;
   out_5432513086891330118[212] = 0;
   out_5432513086891330118[213] = 0;
   out_5432513086891330118[214] = 0;
   out_5432513086891330118[215] = 0;
   out_5432513086891330118[216] = 0;
   out_5432513086891330118[217] = 0;
   out_5432513086891330118[218] = 0;
   out_5432513086891330118[219] = 1.0;
   out_5432513086891330118[220] = 0;
   out_5432513086891330118[221] = 0;
   out_5432513086891330118[222] = 0;
   out_5432513086891330118[223] = 0;
   out_5432513086891330118[224] = 0;
   out_5432513086891330118[225] = 0;
   out_5432513086891330118[226] = 0;
   out_5432513086891330118[227] = 0;
   out_5432513086891330118[228] = 0;
   out_5432513086891330118[229] = 0;
   out_5432513086891330118[230] = 0;
   out_5432513086891330118[231] = 0;
   out_5432513086891330118[232] = 0;
   out_5432513086891330118[233] = 0;
   out_5432513086891330118[234] = 0;
   out_5432513086891330118[235] = 0;
   out_5432513086891330118[236] = 0;
   out_5432513086891330118[237] = 0;
   out_5432513086891330118[238] = 0;
   out_5432513086891330118[239] = 0;
   out_5432513086891330118[240] = 0;
   out_5432513086891330118[241] = 1.0;
   out_5432513086891330118[242] = 0;
   out_5432513086891330118[243] = 0;
   out_5432513086891330118[244] = 0;
   out_5432513086891330118[245] = 0;
   out_5432513086891330118[246] = 0;
   out_5432513086891330118[247] = 0;
   out_5432513086891330118[248] = 0;
   out_5432513086891330118[249] = 0;
   out_5432513086891330118[250] = 0;
   out_5432513086891330118[251] = 0;
   out_5432513086891330118[252] = 0;
   out_5432513086891330118[253] = 0;
   out_5432513086891330118[254] = 0;
   out_5432513086891330118[255] = 0;
   out_5432513086891330118[256] = 0;
   out_5432513086891330118[257] = 0;
   out_5432513086891330118[258] = 0;
   out_5432513086891330118[259] = 0;
   out_5432513086891330118[260] = 0;
   out_5432513086891330118[261] = 0;
   out_5432513086891330118[262] = 0;
   out_5432513086891330118[263] = 1.0;
   out_5432513086891330118[264] = 0;
   out_5432513086891330118[265] = 0;
   out_5432513086891330118[266] = 0;
   out_5432513086891330118[267] = 0;
   out_5432513086891330118[268] = 0;
   out_5432513086891330118[269] = 0;
   out_5432513086891330118[270] = 0;
   out_5432513086891330118[271] = 0;
   out_5432513086891330118[272] = 0;
   out_5432513086891330118[273] = 0;
   out_5432513086891330118[274] = 0;
   out_5432513086891330118[275] = 0;
   out_5432513086891330118[276] = 0;
   out_5432513086891330118[277] = 0;
   out_5432513086891330118[278] = 0;
   out_5432513086891330118[279] = 0;
   out_5432513086891330118[280] = 0;
   out_5432513086891330118[281] = 0;
   out_5432513086891330118[282] = 0;
   out_5432513086891330118[283] = 0;
   out_5432513086891330118[284] = 0;
   out_5432513086891330118[285] = 1.0;
   out_5432513086891330118[286] = 0;
   out_5432513086891330118[287] = 0;
   out_5432513086891330118[288] = 0;
   out_5432513086891330118[289] = 0;
   out_5432513086891330118[290] = 0;
   out_5432513086891330118[291] = 0;
   out_5432513086891330118[292] = 0;
   out_5432513086891330118[293] = 0;
   out_5432513086891330118[294] = 0;
   out_5432513086891330118[295] = 0;
   out_5432513086891330118[296] = 0;
   out_5432513086891330118[297] = 0;
   out_5432513086891330118[298] = 0;
   out_5432513086891330118[299] = 0;
   out_5432513086891330118[300] = 0;
   out_5432513086891330118[301] = 0;
   out_5432513086891330118[302] = 0;
   out_5432513086891330118[303] = 0;
   out_5432513086891330118[304] = 0;
   out_5432513086891330118[305] = 0;
   out_5432513086891330118[306] = 0;
   out_5432513086891330118[307] = 1.0;
   out_5432513086891330118[308] = 0;
   out_5432513086891330118[309] = 0;
   out_5432513086891330118[310] = 0;
   out_5432513086891330118[311] = 0;
   out_5432513086891330118[312] = 0;
   out_5432513086891330118[313] = 0;
   out_5432513086891330118[314] = 0;
   out_5432513086891330118[315] = 0;
   out_5432513086891330118[316] = 0;
   out_5432513086891330118[317] = 0;
   out_5432513086891330118[318] = 0;
   out_5432513086891330118[319] = 0;
   out_5432513086891330118[320] = 0;
   out_5432513086891330118[321] = 0;
   out_5432513086891330118[322] = 0;
   out_5432513086891330118[323] = 0;
   out_5432513086891330118[324] = 0;
   out_5432513086891330118[325] = 0;
   out_5432513086891330118[326] = 0;
   out_5432513086891330118[327] = 0;
   out_5432513086891330118[328] = 0;
   out_5432513086891330118[329] = 1.0;
   out_5432513086891330118[330] = 0;
   out_5432513086891330118[331] = 0;
   out_5432513086891330118[332] = 0;
   out_5432513086891330118[333] = 0;
   out_5432513086891330118[334] = 0;
   out_5432513086891330118[335] = 0;
   out_5432513086891330118[336] = 0;
   out_5432513086891330118[337] = 0;
   out_5432513086891330118[338] = 0;
   out_5432513086891330118[339] = 0;
   out_5432513086891330118[340] = 0;
   out_5432513086891330118[341] = 0;
   out_5432513086891330118[342] = 0;
   out_5432513086891330118[343] = 0;
   out_5432513086891330118[344] = 0;
   out_5432513086891330118[345] = 0;
   out_5432513086891330118[346] = 0;
   out_5432513086891330118[347] = 0;
   out_5432513086891330118[348] = 0;
   out_5432513086891330118[349] = 0;
   out_5432513086891330118[350] = 0;
   out_5432513086891330118[351] = 1.0;
   out_5432513086891330118[352] = 0;
   out_5432513086891330118[353] = 0;
   out_5432513086891330118[354] = 0;
   out_5432513086891330118[355] = 0;
   out_5432513086891330118[356] = 0;
   out_5432513086891330118[357] = 0;
   out_5432513086891330118[358] = 0;
   out_5432513086891330118[359] = 0;
   out_5432513086891330118[360] = 0;
   out_5432513086891330118[361] = 0;
   out_5432513086891330118[362] = 0;
   out_5432513086891330118[363] = 0;
   out_5432513086891330118[364] = 0;
   out_5432513086891330118[365] = 0;
   out_5432513086891330118[366] = 0;
   out_5432513086891330118[367] = 0;
   out_5432513086891330118[368] = 0;
   out_5432513086891330118[369] = 0;
   out_5432513086891330118[370] = 0;
   out_5432513086891330118[371] = 0;
   out_5432513086891330118[372] = 0;
   out_5432513086891330118[373] = 1.0;
   out_5432513086891330118[374] = 0;
   out_5432513086891330118[375] = 0;
   out_5432513086891330118[376] = 0;
   out_5432513086891330118[377] = 0;
   out_5432513086891330118[378] = 0;
   out_5432513086891330118[379] = 0;
   out_5432513086891330118[380] = 0;
   out_5432513086891330118[381] = 0;
   out_5432513086891330118[382] = 0;
   out_5432513086891330118[383] = 0;
   out_5432513086891330118[384] = 0;
   out_5432513086891330118[385] = 0;
   out_5432513086891330118[386] = 0;
   out_5432513086891330118[387] = 0;
   out_5432513086891330118[388] = 0;
   out_5432513086891330118[389] = 0;
   out_5432513086891330118[390] = 0;
   out_5432513086891330118[391] = 0;
   out_5432513086891330118[392] = 0;
   out_5432513086891330118[393] = 0;
   out_5432513086891330118[394] = 0;
   out_5432513086891330118[395] = 1.0;
   out_5432513086891330118[396] = 0;
   out_5432513086891330118[397] = 0;
   out_5432513086891330118[398] = 0;
   out_5432513086891330118[399] = 0;
   out_5432513086891330118[400] = 0;
   out_5432513086891330118[401] = 0;
   out_5432513086891330118[402] = 0;
   out_5432513086891330118[403] = 0;
   out_5432513086891330118[404] = 0;
   out_5432513086891330118[405] = 0;
   out_5432513086891330118[406] = 0;
   out_5432513086891330118[407] = 0;
   out_5432513086891330118[408] = 0;
   out_5432513086891330118[409] = 0;
   out_5432513086891330118[410] = 0;
   out_5432513086891330118[411] = 0;
   out_5432513086891330118[412] = 0;
   out_5432513086891330118[413] = 0;
   out_5432513086891330118[414] = 0;
   out_5432513086891330118[415] = 0;
   out_5432513086891330118[416] = 0;
   out_5432513086891330118[417] = 1.0;
   out_5432513086891330118[418] = 0;
   out_5432513086891330118[419] = 0;
   out_5432513086891330118[420] = 0;
   out_5432513086891330118[421] = 0;
   out_5432513086891330118[422] = 0;
   out_5432513086891330118[423] = 0;
   out_5432513086891330118[424] = 0;
   out_5432513086891330118[425] = 0;
   out_5432513086891330118[426] = 0;
   out_5432513086891330118[427] = 0;
   out_5432513086891330118[428] = 0;
   out_5432513086891330118[429] = 0;
   out_5432513086891330118[430] = 0;
   out_5432513086891330118[431] = 0;
   out_5432513086891330118[432] = 0;
   out_5432513086891330118[433] = 0;
   out_5432513086891330118[434] = 0;
   out_5432513086891330118[435] = 0;
   out_5432513086891330118[436] = 0;
   out_5432513086891330118[437] = 0;
   out_5432513086891330118[438] = 0;
   out_5432513086891330118[439] = 1.0;
   out_5432513086891330118[440] = 0;
   out_5432513086891330118[441] = 0;
   out_5432513086891330118[442] = 0;
   out_5432513086891330118[443] = 0;
   out_5432513086891330118[444] = 0;
   out_5432513086891330118[445] = 0;
   out_5432513086891330118[446] = 0;
   out_5432513086891330118[447] = 0;
   out_5432513086891330118[448] = 0;
   out_5432513086891330118[449] = 0;
   out_5432513086891330118[450] = 0;
   out_5432513086891330118[451] = 0;
   out_5432513086891330118[452] = 0;
   out_5432513086891330118[453] = 0;
   out_5432513086891330118[454] = 0;
   out_5432513086891330118[455] = 0;
   out_5432513086891330118[456] = 0;
   out_5432513086891330118[457] = 0;
   out_5432513086891330118[458] = 0;
   out_5432513086891330118[459] = 0;
   out_5432513086891330118[460] = 0;
   out_5432513086891330118[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3124841438364502345) {
   out_3124841438364502345[0] = dt*state[7] + state[0];
   out_3124841438364502345[1] = dt*state[8] + state[1];
   out_3124841438364502345[2] = dt*state[9] + state[2];
   out_3124841438364502345[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3124841438364502345[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3124841438364502345[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3124841438364502345[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3124841438364502345[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3124841438364502345[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3124841438364502345[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3124841438364502345[10] = state[10];
   out_3124841438364502345[11] = state[11];
   out_3124841438364502345[12] = state[12];
   out_3124841438364502345[13] = state[13];
   out_3124841438364502345[14] = state[14];
   out_3124841438364502345[15] = state[15];
   out_3124841438364502345[16] = state[16];
   out_3124841438364502345[17] = state[17];
   out_3124841438364502345[18] = state[18];
   out_3124841438364502345[19] = state[19];
   out_3124841438364502345[20] = state[20];
   out_3124841438364502345[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1516188799163097895) {
   out_1516188799163097895[0] = 1;
   out_1516188799163097895[1] = 0;
   out_1516188799163097895[2] = 0;
   out_1516188799163097895[3] = 0;
   out_1516188799163097895[4] = 0;
   out_1516188799163097895[5] = 0;
   out_1516188799163097895[6] = dt;
   out_1516188799163097895[7] = 0;
   out_1516188799163097895[8] = 0;
   out_1516188799163097895[9] = 0;
   out_1516188799163097895[10] = 0;
   out_1516188799163097895[11] = 0;
   out_1516188799163097895[12] = 0;
   out_1516188799163097895[13] = 0;
   out_1516188799163097895[14] = 0;
   out_1516188799163097895[15] = 0;
   out_1516188799163097895[16] = 0;
   out_1516188799163097895[17] = 0;
   out_1516188799163097895[18] = 0;
   out_1516188799163097895[19] = 0;
   out_1516188799163097895[20] = 0;
   out_1516188799163097895[21] = 0;
   out_1516188799163097895[22] = 1;
   out_1516188799163097895[23] = 0;
   out_1516188799163097895[24] = 0;
   out_1516188799163097895[25] = 0;
   out_1516188799163097895[26] = 0;
   out_1516188799163097895[27] = 0;
   out_1516188799163097895[28] = dt;
   out_1516188799163097895[29] = 0;
   out_1516188799163097895[30] = 0;
   out_1516188799163097895[31] = 0;
   out_1516188799163097895[32] = 0;
   out_1516188799163097895[33] = 0;
   out_1516188799163097895[34] = 0;
   out_1516188799163097895[35] = 0;
   out_1516188799163097895[36] = 0;
   out_1516188799163097895[37] = 0;
   out_1516188799163097895[38] = 0;
   out_1516188799163097895[39] = 0;
   out_1516188799163097895[40] = 0;
   out_1516188799163097895[41] = 0;
   out_1516188799163097895[42] = 0;
   out_1516188799163097895[43] = 0;
   out_1516188799163097895[44] = 1;
   out_1516188799163097895[45] = 0;
   out_1516188799163097895[46] = 0;
   out_1516188799163097895[47] = 0;
   out_1516188799163097895[48] = 0;
   out_1516188799163097895[49] = 0;
   out_1516188799163097895[50] = dt;
   out_1516188799163097895[51] = 0;
   out_1516188799163097895[52] = 0;
   out_1516188799163097895[53] = 0;
   out_1516188799163097895[54] = 0;
   out_1516188799163097895[55] = 0;
   out_1516188799163097895[56] = 0;
   out_1516188799163097895[57] = 0;
   out_1516188799163097895[58] = 0;
   out_1516188799163097895[59] = 0;
   out_1516188799163097895[60] = 0;
   out_1516188799163097895[61] = 0;
   out_1516188799163097895[62] = 0;
   out_1516188799163097895[63] = 0;
   out_1516188799163097895[64] = 0;
   out_1516188799163097895[65] = 0;
   out_1516188799163097895[66] = 1;
   out_1516188799163097895[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1516188799163097895[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1516188799163097895[69] = 0;
   out_1516188799163097895[70] = 0;
   out_1516188799163097895[71] = 0;
   out_1516188799163097895[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1516188799163097895[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1516188799163097895[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1516188799163097895[75] = 0;
   out_1516188799163097895[76] = 0;
   out_1516188799163097895[77] = 0;
   out_1516188799163097895[78] = 0;
   out_1516188799163097895[79] = 0;
   out_1516188799163097895[80] = 0;
   out_1516188799163097895[81] = 0;
   out_1516188799163097895[82] = 0;
   out_1516188799163097895[83] = 0;
   out_1516188799163097895[84] = 0;
   out_1516188799163097895[85] = 0;
   out_1516188799163097895[86] = 0;
   out_1516188799163097895[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1516188799163097895[88] = 1;
   out_1516188799163097895[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1516188799163097895[90] = 0;
   out_1516188799163097895[91] = 0;
   out_1516188799163097895[92] = 0;
   out_1516188799163097895[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1516188799163097895[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1516188799163097895[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1516188799163097895[96] = 0;
   out_1516188799163097895[97] = 0;
   out_1516188799163097895[98] = 0;
   out_1516188799163097895[99] = 0;
   out_1516188799163097895[100] = 0;
   out_1516188799163097895[101] = 0;
   out_1516188799163097895[102] = 0;
   out_1516188799163097895[103] = 0;
   out_1516188799163097895[104] = 0;
   out_1516188799163097895[105] = 0;
   out_1516188799163097895[106] = 0;
   out_1516188799163097895[107] = 0;
   out_1516188799163097895[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1516188799163097895[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1516188799163097895[110] = 1;
   out_1516188799163097895[111] = 0;
   out_1516188799163097895[112] = 0;
   out_1516188799163097895[113] = 0;
   out_1516188799163097895[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1516188799163097895[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1516188799163097895[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1516188799163097895[117] = 0;
   out_1516188799163097895[118] = 0;
   out_1516188799163097895[119] = 0;
   out_1516188799163097895[120] = 0;
   out_1516188799163097895[121] = 0;
   out_1516188799163097895[122] = 0;
   out_1516188799163097895[123] = 0;
   out_1516188799163097895[124] = 0;
   out_1516188799163097895[125] = 0;
   out_1516188799163097895[126] = 0;
   out_1516188799163097895[127] = 0;
   out_1516188799163097895[128] = 0;
   out_1516188799163097895[129] = 0;
   out_1516188799163097895[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1516188799163097895[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1516188799163097895[132] = 1;
   out_1516188799163097895[133] = 0;
   out_1516188799163097895[134] = 0;
   out_1516188799163097895[135] = 0;
   out_1516188799163097895[136] = 0;
   out_1516188799163097895[137] = 0;
   out_1516188799163097895[138] = 0;
   out_1516188799163097895[139] = 0;
   out_1516188799163097895[140] = 0;
   out_1516188799163097895[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1516188799163097895[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1516188799163097895[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1516188799163097895[144] = 0;
   out_1516188799163097895[145] = 0;
   out_1516188799163097895[146] = 0;
   out_1516188799163097895[147] = 0;
   out_1516188799163097895[148] = 0;
   out_1516188799163097895[149] = 0;
   out_1516188799163097895[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1516188799163097895[151] = 0;
   out_1516188799163097895[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1516188799163097895[153] = 0;
   out_1516188799163097895[154] = 1;
   out_1516188799163097895[155] = 0;
   out_1516188799163097895[156] = 0;
   out_1516188799163097895[157] = 0;
   out_1516188799163097895[158] = 0;
   out_1516188799163097895[159] = 0;
   out_1516188799163097895[160] = 0;
   out_1516188799163097895[161] = 0;
   out_1516188799163097895[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1516188799163097895[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1516188799163097895[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1516188799163097895[165] = 0;
   out_1516188799163097895[166] = 0;
   out_1516188799163097895[167] = 0;
   out_1516188799163097895[168] = 0;
   out_1516188799163097895[169] = 0;
   out_1516188799163097895[170] = 0;
   out_1516188799163097895[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1516188799163097895[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1516188799163097895[173] = 0;
   out_1516188799163097895[174] = 0;
   out_1516188799163097895[175] = 0;
   out_1516188799163097895[176] = 1;
   out_1516188799163097895[177] = 0;
   out_1516188799163097895[178] = 0;
   out_1516188799163097895[179] = 0;
   out_1516188799163097895[180] = 0;
   out_1516188799163097895[181] = 0;
   out_1516188799163097895[182] = 0;
   out_1516188799163097895[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1516188799163097895[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1516188799163097895[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1516188799163097895[186] = 0;
   out_1516188799163097895[187] = 0;
   out_1516188799163097895[188] = 0;
   out_1516188799163097895[189] = 0;
   out_1516188799163097895[190] = 0;
   out_1516188799163097895[191] = 0;
   out_1516188799163097895[192] = 0;
   out_1516188799163097895[193] = 0;
   out_1516188799163097895[194] = 0;
   out_1516188799163097895[195] = 0;
   out_1516188799163097895[196] = 0;
   out_1516188799163097895[197] = 0;
   out_1516188799163097895[198] = 1;
   out_1516188799163097895[199] = 0;
   out_1516188799163097895[200] = 0;
   out_1516188799163097895[201] = 0;
   out_1516188799163097895[202] = 0;
   out_1516188799163097895[203] = 0;
   out_1516188799163097895[204] = 0;
   out_1516188799163097895[205] = 0;
   out_1516188799163097895[206] = 0;
   out_1516188799163097895[207] = 0;
   out_1516188799163097895[208] = 0;
   out_1516188799163097895[209] = 0;
   out_1516188799163097895[210] = 0;
   out_1516188799163097895[211] = 0;
   out_1516188799163097895[212] = 0;
   out_1516188799163097895[213] = 0;
   out_1516188799163097895[214] = 0;
   out_1516188799163097895[215] = 0;
   out_1516188799163097895[216] = 0;
   out_1516188799163097895[217] = 0;
   out_1516188799163097895[218] = 0;
   out_1516188799163097895[219] = 0;
   out_1516188799163097895[220] = 1;
   out_1516188799163097895[221] = 0;
   out_1516188799163097895[222] = 0;
   out_1516188799163097895[223] = 0;
   out_1516188799163097895[224] = 0;
   out_1516188799163097895[225] = 0;
   out_1516188799163097895[226] = 0;
   out_1516188799163097895[227] = 0;
   out_1516188799163097895[228] = 0;
   out_1516188799163097895[229] = 0;
   out_1516188799163097895[230] = 0;
   out_1516188799163097895[231] = 0;
   out_1516188799163097895[232] = 0;
   out_1516188799163097895[233] = 0;
   out_1516188799163097895[234] = 0;
   out_1516188799163097895[235] = 0;
   out_1516188799163097895[236] = 0;
   out_1516188799163097895[237] = 0;
   out_1516188799163097895[238] = 0;
   out_1516188799163097895[239] = 0;
   out_1516188799163097895[240] = 0;
   out_1516188799163097895[241] = 0;
   out_1516188799163097895[242] = 1;
   out_1516188799163097895[243] = 0;
   out_1516188799163097895[244] = 0;
   out_1516188799163097895[245] = 0;
   out_1516188799163097895[246] = 0;
   out_1516188799163097895[247] = 0;
   out_1516188799163097895[248] = 0;
   out_1516188799163097895[249] = 0;
   out_1516188799163097895[250] = 0;
   out_1516188799163097895[251] = 0;
   out_1516188799163097895[252] = 0;
   out_1516188799163097895[253] = 0;
   out_1516188799163097895[254] = 0;
   out_1516188799163097895[255] = 0;
   out_1516188799163097895[256] = 0;
   out_1516188799163097895[257] = 0;
   out_1516188799163097895[258] = 0;
   out_1516188799163097895[259] = 0;
   out_1516188799163097895[260] = 0;
   out_1516188799163097895[261] = 0;
   out_1516188799163097895[262] = 0;
   out_1516188799163097895[263] = 0;
   out_1516188799163097895[264] = 1;
   out_1516188799163097895[265] = 0;
   out_1516188799163097895[266] = 0;
   out_1516188799163097895[267] = 0;
   out_1516188799163097895[268] = 0;
   out_1516188799163097895[269] = 0;
   out_1516188799163097895[270] = 0;
   out_1516188799163097895[271] = 0;
   out_1516188799163097895[272] = 0;
   out_1516188799163097895[273] = 0;
   out_1516188799163097895[274] = 0;
   out_1516188799163097895[275] = 0;
   out_1516188799163097895[276] = 0;
   out_1516188799163097895[277] = 0;
   out_1516188799163097895[278] = 0;
   out_1516188799163097895[279] = 0;
   out_1516188799163097895[280] = 0;
   out_1516188799163097895[281] = 0;
   out_1516188799163097895[282] = 0;
   out_1516188799163097895[283] = 0;
   out_1516188799163097895[284] = 0;
   out_1516188799163097895[285] = 0;
   out_1516188799163097895[286] = 1;
   out_1516188799163097895[287] = 0;
   out_1516188799163097895[288] = 0;
   out_1516188799163097895[289] = 0;
   out_1516188799163097895[290] = 0;
   out_1516188799163097895[291] = 0;
   out_1516188799163097895[292] = 0;
   out_1516188799163097895[293] = 0;
   out_1516188799163097895[294] = 0;
   out_1516188799163097895[295] = 0;
   out_1516188799163097895[296] = 0;
   out_1516188799163097895[297] = 0;
   out_1516188799163097895[298] = 0;
   out_1516188799163097895[299] = 0;
   out_1516188799163097895[300] = 0;
   out_1516188799163097895[301] = 0;
   out_1516188799163097895[302] = 0;
   out_1516188799163097895[303] = 0;
   out_1516188799163097895[304] = 0;
   out_1516188799163097895[305] = 0;
   out_1516188799163097895[306] = 0;
   out_1516188799163097895[307] = 0;
   out_1516188799163097895[308] = 1;
   out_1516188799163097895[309] = 0;
   out_1516188799163097895[310] = 0;
   out_1516188799163097895[311] = 0;
   out_1516188799163097895[312] = 0;
   out_1516188799163097895[313] = 0;
   out_1516188799163097895[314] = 0;
   out_1516188799163097895[315] = 0;
   out_1516188799163097895[316] = 0;
   out_1516188799163097895[317] = 0;
   out_1516188799163097895[318] = 0;
   out_1516188799163097895[319] = 0;
   out_1516188799163097895[320] = 0;
   out_1516188799163097895[321] = 0;
   out_1516188799163097895[322] = 0;
   out_1516188799163097895[323] = 0;
   out_1516188799163097895[324] = 0;
   out_1516188799163097895[325] = 0;
   out_1516188799163097895[326] = 0;
   out_1516188799163097895[327] = 0;
   out_1516188799163097895[328] = 0;
   out_1516188799163097895[329] = 0;
   out_1516188799163097895[330] = 1;
   out_1516188799163097895[331] = 0;
   out_1516188799163097895[332] = 0;
   out_1516188799163097895[333] = 0;
   out_1516188799163097895[334] = 0;
   out_1516188799163097895[335] = 0;
   out_1516188799163097895[336] = 0;
   out_1516188799163097895[337] = 0;
   out_1516188799163097895[338] = 0;
   out_1516188799163097895[339] = 0;
   out_1516188799163097895[340] = 0;
   out_1516188799163097895[341] = 0;
   out_1516188799163097895[342] = 0;
   out_1516188799163097895[343] = 0;
   out_1516188799163097895[344] = 0;
   out_1516188799163097895[345] = 0;
   out_1516188799163097895[346] = 0;
   out_1516188799163097895[347] = 0;
   out_1516188799163097895[348] = 0;
   out_1516188799163097895[349] = 0;
   out_1516188799163097895[350] = 0;
   out_1516188799163097895[351] = 0;
   out_1516188799163097895[352] = 1;
   out_1516188799163097895[353] = 0;
   out_1516188799163097895[354] = 0;
   out_1516188799163097895[355] = 0;
   out_1516188799163097895[356] = 0;
   out_1516188799163097895[357] = 0;
   out_1516188799163097895[358] = 0;
   out_1516188799163097895[359] = 0;
   out_1516188799163097895[360] = 0;
   out_1516188799163097895[361] = 0;
   out_1516188799163097895[362] = 0;
   out_1516188799163097895[363] = 0;
   out_1516188799163097895[364] = 0;
   out_1516188799163097895[365] = 0;
   out_1516188799163097895[366] = 0;
   out_1516188799163097895[367] = 0;
   out_1516188799163097895[368] = 0;
   out_1516188799163097895[369] = 0;
   out_1516188799163097895[370] = 0;
   out_1516188799163097895[371] = 0;
   out_1516188799163097895[372] = 0;
   out_1516188799163097895[373] = 0;
   out_1516188799163097895[374] = 1;
   out_1516188799163097895[375] = 0;
   out_1516188799163097895[376] = 0;
   out_1516188799163097895[377] = 0;
   out_1516188799163097895[378] = 0;
   out_1516188799163097895[379] = 0;
   out_1516188799163097895[380] = 0;
   out_1516188799163097895[381] = 0;
   out_1516188799163097895[382] = 0;
   out_1516188799163097895[383] = 0;
   out_1516188799163097895[384] = 0;
   out_1516188799163097895[385] = 0;
   out_1516188799163097895[386] = 0;
   out_1516188799163097895[387] = 0;
   out_1516188799163097895[388] = 0;
   out_1516188799163097895[389] = 0;
   out_1516188799163097895[390] = 0;
   out_1516188799163097895[391] = 0;
   out_1516188799163097895[392] = 0;
   out_1516188799163097895[393] = 0;
   out_1516188799163097895[394] = 0;
   out_1516188799163097895[395] = 0;
   out_1516188799163097895[396] = 1;
   out_1516188799163097895[397] = 0;
   out_1516188799163097895[398] = 0;
   out_1516188799163097895[399] = 0;
   out_1516188799163097895[400] = 0;
   out_1516188799163097895[401] = 0;
   out_1516188799163097895[402] = 0;
   out_1516188799163097895[403] = 0;
   out_1516188799163097895[404] = 0;
   out_1516188799163097895[405] = 0;
   out_1516188799163097895[406] = 0;
   out_1516188799163097895[407] = 0;
   out_1516188799163097895[408] = 0;
   out_1516188799163097895[409] = 0;
   out_1516188799163097895[410] = 0;
   out_1516188799163097895[411] = 0;
   out_1516188799163097895[412] = 0;
   out_1516188799163097895[413] = 0;
   out_1516188799163097895[414] = 0;
   out_1516188799163097895[415] = 0;
   out_1516188799163097895[416] = 0;
   out_1516188799163097895[417] = 0;
   out_1516188799163097895[418] = 1;
   out_1516188799163097895[419] = 0;
   out_1516188799163097895[420] = 0;
   out_1516188799163097895[421] = 0;
   out_1516188799163097895[422] = 0;
   out_1516188799163097895[423] = 0;
   out_1516188799163097895[424] = 0;
   out_1516188799163097895[425] = 0;
   out_1516188799163097895[426] = 0;
   out_1516188799163097895[427] = 0;
   out_1516188799163097895[428] = 0;
   out_1516188799163097895[429] = 0;
   out_1516188799163097895[430] = 0;
   out_1516188799163097895[431] = 0;
   out_1516188799163097895[432] = 0;
   out_1516188799163097895[433] = 0;
   out_1516188799163097895[434] = 0;
   out_1516188799163097895[435] = 0;
   out_1516188799163097895[436] = 0;
   out_1516188799163097895[437] = 0;
   out_1516188799163097895[438] = 0;
   out_1516188799163097895[439] = 0;
   out_1516188799163097895[440] = 1;
}
void h_4(double *state, double *unused, double *out_5146405128764971715) {
   out_5146405128764971715[0] = state[10] + state[13];
   out_5146405128764971715[1] = state[11] + state[14];
   out_5146405128764971715[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8280514637229318136) {
   out_8280514637229318136[0] = 0;
   out_8280514637229318136[1] = 0;
   out_8280514637229318136[2] = 0;
   out_8280514637229318136[3] = 0;
   out_8280514637229318136[4] = 0;
   out_8280514637229318136[5] = 0;
   out_8280514637229318136[6] = 0;
   out_8280514637229318136[7] = 0;
   out_8280514637229318136[8] = 0;
   out_8280514637229318136[9] = 0;
   out_8280514637229318136[10] = 1;
   out_8280514637229318136[11] = 0;
   out_8280514637229318136[12] = 0;
   out_8280514637229318136[13] = 1;
   out_8280514637229318136[14] = 0;
   out_8280514637229318136[15] = 0;
   out_8280514637229318136[16] = 0;
   out_8280514637229318136[17] = 0;
   out_8280514637229318136[18] = 0;
   out_8280514637229318136[19] = 0;
   out_8280514637229318136[20] = 0;
   out_8280514637229318136[21] = 0;
   out_8280514637229318136[22] = 0;
   out_8280514637229318136[23] = 0;
   out_8280514637229318136[24] = 0;
   out_8280514637229318136[25] = 0;
   out_8280514637229318136[26] = 0;
   out_8280514637229318136[27] = 0;
   out_8280514637229318136[28] = 0;
   out_8280514637229318136[29] = 0;
   out_8280514637229318136[30] = 0;
   out_8280514637229318136[31] = 0;
   out_8280514637229318136[32] = 0;
   out_8280514637229318136[33] = 1;
   out_8280514637229318136[34] = 0;
   out_8280514637229318136[35] = 0;
   out_8280514637229318136[36] = 1;
   out_8280514637229318136[37] = 0;
   out_8280514637229318136[38] = 0;
   out_8280514637229318136[39] = 0;
   out_8280514637229318136[40] = 0;
   out_8280514637229318136[41] = 0;
   out_8280514637229318136[42] = 0;
   out_8280514637229318136[43] = 0;
   out_8280514637229318136[44] = 0;
   out_8280514637229318136[45] = 0;
   out_8280514637229318136[46] = 0;
   out_8280514637229318136[47] = 0;
   out_8280514637229318136[48] = 0;
   out_8280514637229318136[49] = 0;
   out_8280514637229318136[50] = 0;
   out_8280514637229318136[51] = 0;
   out_8280514637229318136[52] = 0;
   out_8280514637229318136[53] = 0;
   out_8280514637229318136[54] = 0;
   out_8280514637229318136[55] = 0;
   out_8280514637229318136[56] = 1;
   out_8280514637229318136[57] = 0;
   out_8280514637229318136[58] = 0;
   out_8280514637229318136[59] = 1;
   out_8280514637229318136[60] = 0;
   out_8280514637229318136[61] = 0;
   out_8280514637229318136[62] = 0;
   out_8280514637229318136[63] = 0;
   out_8280514637229318136[64] = 0;
   out_8280514637229318136[65] = 0;
}
void h_9(double *state, double *unused, double *out_6521535856256346272) {
   out_6521535856256346272[0] = state[10];
   out_6521535856256346272[1] = state[11];
   out_6521535856256346272[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2879010501215786010) {
   out_2879010501215786010[0] = 0;
   out_2879010501215786010[1] = 0;
   out_2879010501215786010[2] = 0;
   out_2879010501215786010[3] = 0;
   out_2879010501215786010[4] = 0;
   out_2879010501215786010[5] = 0;
   out_2879010501215786010[6] = 0;
   out_2879010501215786010[7] = 0;
   out_2879010501215786010[8] = 0;
   out_2879010501215786010[9] = 0;
   out_2879010501215786010[10] = 1;
   out_2879010501215786010[11] = 0;
   out_2879010501215786010[12] = 0;
   out_2879010501215786010[13] = 0;
   out_2879010501215786010[14] = 0;
   out_2879010501215786010[15] = 0;
   out_2879010501215786010[16] = 0;
   out_2879010501215786010[17] = 0;
   out_2879010501215786010[18] = 0;
   out_2879010501215786010[19] = 0;
   out_2879010501215786010[20] = 0;
   out_2879010501215786010[21] = 0;
   out_2879010501215786010[22] = 0;
   out_2879010501215786010[23] = 0;
   out_2879010501215786010[24] = 0;
   out_2879010501215786010[25] = 0;
   out_2879010501215786010[26] = 0;
   out_2879010501215786010[27] = 0;
   out_2879010501215786010[28] = 0;
   out_2879010501215786010[29] = 0;
   out_2879010501215786010[30] = 0;
   out_2879010501215786010[31] = 0;
   out_2879010501215786010[32] = 0;
   out_2879010501215786010[33] = 1;
   out_2879010501215786010[34] = 0;
   out_2879010501215786010[35] = 0;
   out_2879010501215786010[36] = 0;
   out_2879010501215786010[37] = 0;
   out_2879010501215786010[38] = 0;
   out_2879010501215786010[39] = 0;
   out_2879010501215786010[40] = 0;
   out_2879010501215786010[41] = 0;
   out_2879010501215786010[42] = 0;
   out_2879010501215786010[43] = 0;
   out_2879010501215786010[44] = 0;
   out_2879010501215786010[45] = 0;
   out_2879010501215786010[46] = 0;
   out_2879010501215786010[47] = 0;
   out_2879010501215786010[48] = 0;
   out_2879010501215786010[49] = 0;
   out_2879010501215786010[50] = 0;
   out_2879010501215786010[51] = 0;
   out_2879010501215786010[52] = 0;
   out_2879010501215786010[53] = 0;
   out_2879010501215786010[54] = 0;
   out_2879010501215786010[55] = 0;
   out_2879010501215786010[56] = 1;
   out_2879010501215786010[57] = 0;
   out_2879010501215786010[58] = 0;
   out_2879010501215786010[59] = 0;
   out_2879010501215786010[60] = 0;
   out_2879010501215786010[61] = 0;
   out_2879010501215786010[62] = 0;
   out_2879010501215786010[63] = 0;
   out_2879010501215786010[64] = 0;
   out_2879010501215786010[65] = 0;
}
void h_10(double *state, double *unused, double *out_7650523423264487676) {
   out_7650523423264487676[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7650523423264487676[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7650523423264487676[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8349484776071401233) {
   out_8349484776071401233[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8349484776071401233[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8349484776071401233[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8349484776071401233[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8349484776071401233[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8349484776071401233[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8349484776071401233[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8349484776071401233[7] = 0;
   out_8349484776071401233[8] = 0;
   out_8349484776071401233[9] = 0;
   out_8349484776071401233[10] = 0;
   out_8349484776071401233[11] = 0;
   out_8349484776071401233[12] = 0;
   out_8349484776071401233[13] = 0;
   out_8349484776071401233[14] = 0;
   out_8349484776071401233[15] = 0;
   out_8349484776071401233[16] = 1;
   out_8349484776071401233[17] = 0;
   out_8349484776071401233[18] = 0;
   out_8349484776071401233[19] = 1;
   out_8349484776071401233[20] = 0;
   out_8349484776071401233[21] = 0;
   out_8349484776071401233[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8349484776071401233[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8349484776071401233[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8349484776071401233[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8349484776071401233[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8349484776071401233[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8349484776071401233[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8349484776071401233[29] = 0;
   out_8349484776071401233[30] = 0;
   out_8349484776071401233[31] = 0;
   out_8349484776071401233[32] = 0;
   out_8349484776071401233[33] = 0;
   out_8349484776071401233[34] = 0;
   out_8349484776071401233[35] = 0;
   out_8349484776071401233[36] = 0;
   out_8349484776071401233[37] = 0;
   out_8349484776071401233[38] = 0;
   out_8349484776071401233[39] = 1;
   out_8349484776071401233[40] = 0;
   out_8349484776071401233[41] = 0;
   out_8349484776071401233[42] = 1;
   out_8349484776071401233[43] = 0;
   out_8349484776071401233[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8349484776071401233[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8349484776071401233[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8349484776071401233[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8349484776071401233[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8349484776071401233[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8349484776071401233[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8349484776071401233[51] = 0;
   out_8349484776071401233[52] = 0;
   out_8349484776071401233[53] = 0;
   out_8349484776071401233[54] = 0;
   out_8349484776071401233[55] = 0;
   out_8349484776071401233[56] = 0;
   out_8349484776071401233[57] = 0;
   out_8349484776071401233[58] = 0;
   out_8349484776071401233[59] = 0;
   out_8349484776071401233[60] = 0;
   out_8349484776071401233[61] = 0;
   out_8349484776071401233[62] = 1;
   out_8349484776071401233[63] = 0;
   out_8349484776071401233[64] = 0;
   out_8349484776071401233[65] = 1;
}
void h_12(double *state, double *unused, double *out_1249483860836207293) {
   out_1249483860836207293[0] = state[0];
   out_1249483860836207293[1] = state[1];
   out_1249483860836207293[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1899256260186585140) {
   out_1899256260186585140[0] = 1;
   out_1899256260186585140[1] = 0;
   out_1899256260186585140[2] = 0;
   out_1899256260186585140[3] = 0;
   out_1899256260186585140[4] = 0;
   out_1899256260186585140[5] = 0;
   out_1899256260186585140[6] = 0;
   out_1899256260186585140[7] = 0;
   out_1899256260186585140[8] = 0;
   out_1899256260186585140[9] = 0;
   out_1899256260186585140[10] = 0;
   out_1899256260186585140[11] = 0;
   out_1899256260186585140[12] = 0;
   out_1899256260186585140[13] = 0;
   out_1899256260186585140[14] = 0;
   out_1899256260186585140[15] = 0;
   out_1899256260186585140[16] = 0;
   out_1899256260186585140[17] = 0;
   out_1899256260186585140[18] = 0;
   out_1899256260186585140[19] = 0;
   out_1899256260186585140[20] = 0;
   out_1899256260186585140[21] = 0;
   out_1899256260186585140[22] = 0;
   out_1899256260186585140[23] = 1;
   out_1899256260186585140[24] = 0;
   out_1899256260186585140[25] = 0;
   out_1899256260186585140[26] = 0;
   out_1899256260186585140[27] = 0;
   out_1899256260186585140[28] = 0;
   out_1899256260186585140[29] = 0;
   out_1899256260186585140[30] = 0;
   out_1899256260186585140[31] = 0;
   out_1899256260186585140[32] = 0;
   out_1899256260186585140[33] = 0;
   out_1899256260186585140[34] = 0;
   out_1899256260186585140[35] = 0;
   out_1899256260186585140[36] = 0;
   out_1899256260186585140[37] = 0;
   out_1899256260186585140[38] = 0;
   out_1899256260186585140[39] = 0;
   out_1899256260186585140[40] = 0;
   out_1899256260186585140[41] = 0;
   out_1899256260186585140[42] = 0;
   out_1899256260186585140[43] = 0;
   out_1899256260186585140[44] = 0;
   out_1899256260186585140[45] = 0;
   out_1899256260186585140[46] = 1;
   out_1899256260186585140[47] = 0;
   out_1899256260186585140[48] = 0;
   out_1899256260186585140[49] = 0;
   out_1899256260186585140[50] = 0;
   out_1899256260186585140[51] = 0;
   out_1899256260186585140[52] = 0;
   out_1899256260186585140[53] = 0;
   out_1899256260186585140[54] = 0;
   out_1899256260186585140[55] = 0;
   out_1899256260186585140[56] = 0;
   out_1899256260186585140[57] = 0;
   out_1899256260186585140[58] = 0;
   out_1899256260186585140[59] = 0;
   out_1899256260186585140[60] = 0;
   out_1899256260186585140[61] = 0;
   out_1899256260186585140[62] = 0;
   out_1899256260186585140[63] = 0;
   out_1899256260186585140[64] = 0;
   out_1899256260186585140[65] = 0;
}
void h_35(double *state, double *unused, double *out_9194488278142985817) {
   out_9194488278142985817[0] = state[7];
   out_9194488278142985817[1] = state[8];
   out_9194488278142985817[2] = state[9];
}
void H_35(double *state, double *unused, double *out_246461909527230721) {
   out_246461909527230721[0] = 0;
   out_246461909527230721[1] = 0;
   out_246461909527230721[2] = 0;
   out_246461909527230721[3] = 0;
   out_246461909527230721[4] = 0;
   out_246461909527230721[5] = 0;
   out_246461909527230721[6] = 0;
   out_246461909527230721[7] = 1;
   out_246461909527230721[8] = 0;
   out_246461909527230721[9] = 0;
   out_246461909527230721[10] = 0;
   out_246461909527230721[11] = 0;
   out_246461909527230721[12] = 0;
   out_246461909527230721[13] = 0;
   out_246461909527230721[14] = 0;
   out_246461909527230721[15] = 0;
   out_246461909527230721[16] = 0;
   out_246461909527230721[17] = 0;
   out_246461909527230721[18] = 0;
   out_246461909527230721[19] = 0;
   out_246461909527230721[20] = 0;
   out_246461909527230721[21] = 0;
   out_246461909527230721[22] = 0;
   out_246461909527230721[23] = 0;
   out_246461909527230721[24] = 0;
   out_246461909527230721[25] = 0;
   out_246461909527230721[26] = 0;
   out_246461909527230721[27] = 0;
   out_246461909527230721[28] = 0;
   out_246461909527230721[29] = 0;
   out_246461909527230721[30] = 1;
   out_246461909527230721[31] = 0;
   out_246461909527230721[32] = 0;
   out_246461909527230721[33] = 0;
   out_246461909527230721[34] = 0;
   out_246461909527230721[35] = 0;
   out_246461909527230721[36] = 0;
   out_246461909527230721[37] = 0;
   out_246461909527230721[38] = 0;
   out_246461909527230721[39] = 0;
   out_246461909527230721[40] = 0;
   out_246461909527230721[41] = 0;
   out_246461909527230721[42] = 0;
   out_246461909527230721[43] = 0;
   out_246461909527230721[44] = 0;
   out_246461909527230721[45] = 0;
   out_246461909527230721[46] = 0;
   out_246461909527230721[47] = 0;
   out_246461909527230721[48] = 0;
   out_246461909527230721[49] = 0;
   out_246461909527230721[50] = 0;
   out_246461909527230721[51] = 0;
   out_246461909527230721[52] = 0;
   out_246461909527230721[53] = 1;
   out_246461909527230721[54] = 0;
   out_246461909527230721[55] = 0;
   out_246461909527230721[56] = 0;
   out_246461909527230721[57] = 0;
   out_246461909527230721[58] = 0;
   out_246461909527230721[59] = 0;
   out_246461909527230721[60] = 0;
   out_246461909527230721[61] = 0;
   out_246461909527230721[62] = 0;
   out_246461909527230721[63] = 0;
   out_246461909527230721[64] = 0;
   out_246461909527230721[65] = 0;
}
void h_32(double *state, double *unused, double *out_703087583863910197) {
   out_703087583863910197[0] = state[3];
   out_703087583863910197[1] = state[4];
   out_703087583863910197[2] = state[5];
   out_703087583863910197[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7428477456930016442) {
   out_7428477456930016442[0] = 0;
   out_7428477456930016442[1] = 0;
   out_7428477456930016442[2] = 0;
   out_7428477456930016442[3] = 1;
   out_7428477456930016442[4] = 0;
   out_7428477456930016442[5] = 0;
   out_7428477456930016442[6] = 0;
   out_7428477456930016442[7] = 0;
   out_7428477456930016442[8] = 0;
   out_7428477456930016442[9] = 0;
   out_7428477456930016442[10] = 0;
   out_7428477456930016442[11] = 0;
   out_7428477456930016442[12] = 0;
   out_7428477456930016442[13] = 0;
   out_7428477456930016442[14] = 0;
   out_7428477456930016442[15] = 0;
   out_7428477456930016442[16] = 0;
   out_7428477456930016442[17] = 0;
   out_7428477456930016442[18] = 0;
   out_7428477456930016442[19] = 0;
   out_7428477456930016442[20] = 0;
   out_7428477456930016442[21] = 0;
   out_7428477456930016442[22] = 0;
   out_7428477456930016442[23] = 0;
   out_7428477456930016442[24] = 0;
   out_7428477456930016442[25] = 0;
   out_7428477456930016442[26] = 1;
   out_7428477456930016442[27] = 0;
   out_7428477456930016442[28] = 0;
   out_7428477456930016442[29] = 0;
   out_7428477456930016442[30] = 0;
   out_7428477456930016442[31] = 0;
   out_7428477456930016442[32] = 0;
   out_7428477456930016442[33] = 0;
   out_7428477456930016442[34] = 0;
   out_7428477456930016442[35] = 0;
   out_7428477456930016442[36] = 0;
   out_7428477456930016442[37] = 0;
   out_7428477456930016442[38] = 0;
   out_7428477456930016442[39] = 0;
   out_7428477456930016442[40] = 0;
   out_7428477456930016442[41] = 0;
   out_7428477456930016442[42] = 0;
   out_7428477456930016442[43] = 0;
   out_7428477456930016442[44] = 0;
   out_7428477456930016442[45] = 0;
   out_7428477456930016442[46] = 0;
   out_7428477456930016442[47] = 0;
   out_7428477456930016442[48] = 0;
   out_7428477456930016442[49] = 1;
   out_7428477456930016442[50] = 0;
   out_7428477456930016442[51] = 0;
   out_7428477456930016442[52] = 0;
   out_7428477456930016442[53] = 0;
   out_7428477456930016442[54] = 0;
   out_7428477456930016442[55] = 0;
   out_7428477456930016442[56] = 0;
   out_7428477456930016442[57] = 0;
   out_7428477456930016442[58] = 0;
   out_7428477456930016442[59] = 0;
   out_7428477456930016442[60] = 0;
   out_7428477456930016442[61] = 0;
   out_7428477456930016442[62] = 0;
   out_7428477456930016442[63] = 0;
   out_7428477456930016442[64] = 0;
   out_7428477456930016442[65] = 0;
   out_7428477456930016442[66] = 0;
   out_7428477456930016442[67] = 0;
   out_7428477456930016442[68] = 0;
   out_7428477456930016442[69] = 0;
   out_7428477456930016442[70] = 0;
   out_7428477456930016442[71] = 0;
   out_7428477456930016442[72] = 1;
   out_7428477456930016442[73] = 0;
   out_7428477456930016442[74] = 0;
   out_7428477456930016442[75] = 0;
   out_7428477456930016442[76] = 0;
   out_7428477456930016442[77] = 0;
   out_7428477456930016442[78] = 0;
   out_7428477456930016442[79] = 0;
   out_7428477456930016442[80] = 0;
   out_7428477456930016442[81] = 0;
   out_7428477456930016442[82] = 0;
   out_7428477456930016442[83] = 0;
   out_7428477456930016442[84] = 0;
   out_7428477456930016442[85] = 0;
   out_7428477456930016442[86] = 0;
   out_7428477456930016442[87] = 0;
}
void h_13(double *state, double *unused, double *out_1177272293085447184) {
   out_1177272293085447184[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1177272293085447184[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1177272293085447184[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8170091630093444732) {
   out_8170091630093444732[0] = 0;
   out_8170091630093444732[1] = 0;
   out_8170091630093444732[2] = 0;
   out_8170091630093444732[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8170091630093444732[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8170091630093444732[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8170091630093444732[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8170091630093444732[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8170091630093444732[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8170091630093444732[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8170091630093444732[10] = 0;
   out_8170091630093444732[11] = 0;
   out_8170091630093444732[12] = 0;
   out_8170091630093444732[13] = 0;
   out_8170091630093444732[14] = 0;
   out_8170091630093444732[15] = 0;
   out_8170091630093444732[16] = 0;
   out_8170091630093444732[17] = 0;
   out_8170091630093444732[18] = 0;
   out_8170091630093444732[19] = 0;
   out_8170091630093444732[20] = 0;
   out_8170091630093444732[21] = 0;
   out_8170091630093444732[22] = 0;
   out_8170091630093444732[23] = 0;
   out_8170091630093444732[24] = 0;
   out_8170091630093444732[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8170091630093444732[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8170091630093444732[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8170091630093444732[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8170091630093444732[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8170091630093444732[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8170091630093444732[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8170091630093444732[32] = 0;
   out_8170091630093444732[33] = 0;
   out_8170091630093444732[34] = 0;
   out_8170091630093444732[35] = 0;
   out_8170091630093444732[36] = 0;
   out_8170091630093444732[37] = 0;
   out_8170091630093444732[38] = 0;
   out_8170091630093444732[39] = 0;
   out_8170091630093444732[40] = 0;
   out_8170091630093444732[41] = 0;
   out_8170091630093444732[42] = 0;
   out_8170091630093444732[43] = 0;
   out_8170091630093444732[44] = 0;
   out_8170091630093444732[45] = 0;
   out_8170091630093444732[46] = 0;
   out_8170091630093444732[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8170091630093444732[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8170091630093444732[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8170091630093444732[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8170091630093444732[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8170091630093444732[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8170091630093444732[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8170091630093444732[54] = 0;
   out_8170091630093444732[55] = 0;
   out_8170091630093444732[56] = 0;
   out_8170091630093444732[57] = 0;
   out_8170091630093444732[58] = 0;
   out_8170091630093444732[59] = 0;
   out_8170091630093444732[60] = 0;
   out_8170091630093444732[61] = 0;
   out_8170091630093444732[62] = 0;
   out_8170091630093444732[63] = 0;
   out_8170091630093444732[64] = 0;
   out_8170091630093444732[65] = 0;
}
void h_14(double *state, double *unused, double *out_6521535856256346272) {
   out_6521535856256346272[0] = state[10];
   out_6521535856256346272[1] = state[11];
   out_6521535856256346272[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2879010501215786010) {
   out_2879010501215786010[0] = 0;
   out_2879010501215786010[1] = 0;
   out_2879010501215786010[2] = 0;
   out_2879010501215786010[3] = 0;
   out_2879010501215786010[4] = 0;
   out_2879010501215786010[5] = 0;
   out_2879010501215786010[6] = 0;
   out_2879010501215786010[7] = 0;
   out_2879010501215786010[8] = 0;
   out_2879010501215786010[9] = 0;
   out_2879010501215786010[10] = 1;
   out_2879010501215786010[11] = 0;
   out_2879010501215786010[12] = 0;
   out_2879010501215786010[13] = 0;
   out_2879010501215786010[14] = 0;
   out_2879010501215786010[15] = 0;
   out_2879010501215786010[16] = 0;
   out_2879010501215786010[17] = 0;
   out_2879010501215786010[18] = 0;
   out_2879010501215786010[19] = 0;
   out_2879010501215786010[20] = 0;
   out_2879010501215786010[21] = 0;
   out_2879010501215786010[22] = 0;
   out_2879010501215786010[23] = 0;
   out_2879010501215786010[24] = 0;
   out_2879010501215786010[25] = 0;
   out_2879010501215786010[26] = 0;
   out_2879010501215786010[27] = 0;
   out_2879010501215786010[28] = 0;
   out_2879010501215786010[29] = 0;
   out_2879010501215786010[30] = 0;
   out_2879010501215786010[31] = 0;
   out_2879010501215786010[32] = 0;
   out_2879010501215786010[33] = 1;
   out_2879010501215786010[34] = 0;
   out_2879010501215786010[35] = 0;
   out_2879010501215786010[36] = 0;
   out_2879010501215786010[37] = 0;
   out_2879010501215786010[38] = 0;
   out_2879010501215786010[39] = 0;
   out_2879010501215786010[40] = 0;
   out_2879010501215786010[41] = 0;
   out_2879010501215786010[42] = 0;
   out_2879010501215786010[43] = 0;
   out_2879010501215786010[44] = 0;
   out_2879010501215786010[45] = 0;
   out_2879010501215786010[46] = 0;
   out_2879010501215786010[47] = 0;
   out_2879010501215786010[48] = 0;
   out_2879010501215786010[49] = 0;
   out_2879010501215786010[50] = 0;
   out_2879010501215786010[51] = 0;
   out_2879010501215786010[52] = 0;
   out_2879010501215786010[53] = 0;
   out_2879010501215786010[54] = 0;
   out_2879010501215786010[55] = 0;
   out_2879010501215786010[56] = 1;
   out_2879010501215786010[57] = 0;
   out_2879010501215786010[58] = 0;
   out_2879010501215786010[59] = 0;
   out_2879010501215786010[60] = 0;
   out_2879010501215786010[61] = 0;
   out_2879010501215786010[62] = 0;
   out_2879010501215786010[63] = 0;
   out_2879010501215786010[64] = 0;
   out_2879010501215786010[65] = 0;
}
void h_33(double *state, double *unused, double *out_3292218118027320547) {
   out_3292218118027320547[0] = state[16];
   out_3292218118027320547[1] = state[17];
   out_3292218118027320547[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3397018914166088325) {
   out_3397018914166088325[0] = 0;
   out_3397018914166088325[1] = 0;
   out_3397018914166088325[2] = 0;
   out_3397018914166088325[3] = 0;
   out_3397018914166088325[4] = 0;
   out_3397018914166088325[5] = 0;
   out_3397018914166088325[6] = 0;
   out_3397018914166088325[7] = 0;
   out_3397018914166088325[8] = 0;
   out_3397018914166088325[9] = 0;
   out_3397018914166088325[10] = 0;
   out_3397018914166088325[11] = 0;
   out_3397018914166088325[12] = 0;
   out_3397018914166088325[13] = 0;
   out_3397018914166088325[14] = 0;
   out_3397018914166088325[15] = 0;
   out_3397018914166088325[16] = 1;
   out_3397018914166088325[17] = 0;
   out_3397018914166088325[18] = 0;
   out_3397018914166088325[19] = 0;
   out_3397018914166088325[20] = 0;
   out_3397018914166088325[21] = 0;
   out_3397018914166088325[22] = 0;
   out_3397018914166088325[23] = 0;
   out_3397018914166088325[24] = 0;
   out_3397018914166088325[25] = 0;
   out_3397018914166088325[26] = 0;
   out_3397018914166088325[27] = 0;
   out_3397018914166088325[28] = 0;
   out_3397018914166088325[29] = 0;
   out_3397018914166088325[30] = 0;
   out_3397018914166088325[31] = 0;
   out_3397018914166088325[32] = 0;
   out_3397018914166088325[33] = 0;
   out_3397018914166088325[34] = 0;
   out_3397018914166088325[35] = 0;
   out_3397018914166088325[36] = 0;
   out_3397018914166088325[37] = 0;
   out_3397018914166088325[38] = 0;
   out_3397018914166088325[39] = 1;
   out_3397018914166088325[40] = 0;
   out_3397018914166088325[41] = 0;
   out_3397018914166088325[42] = 0;
   out_3397018914166088325[43] = 0;
   out_3397018914166088325[44] = 0;
   out_3397018914166088325[45] = 0;
   out_3397018914166088325[46] = 0;
   out_3397018914166088325[47] = 0;
   out_3397018914166088325[48] = 0;
   out_3397018914166088325[49] = 0;
   out_3397018914166088325[50] = 0;
   out_3397018914166088325[51] = 0;
   out_3397018914166088325[52] = 0;
   out_3397018914166088325[53] = 0;
   out_3397018914166088325[54] = 0;
   out_3397018914166088325[55] = 0;
   out_3397018914166088325[56] = 0;
   out_3397018914166088325[57] = 0;
   out_3397018914166088325[58] = 0;
   out_3397018914166088325[59] = 0;
   out_3397018914166088325[60] = 0;
   out_3397018914166088325[61] = 0;
   out_3397018914166088325[62] = 1;
   out_3397018914166088325[63] = 0;
   out_3397018914166088325[64] = 0;
   out_3397018914166088325[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1414364393616267060) {
  H(in_vec, out_1414364393616267060);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8526993589485217283) {
  err_fun(nom_x, delta_x, out_8526993589485217283);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5446140761574181847) {
  inv_err_fun(nom_x, true_x, out_5446140761574181847);
}
void live_H_mod_fun(double *state, double *out_5432513086891330118) {
  H_mod_fun(state, out_5432513086891330118);
}
void live_f_fun(double *state, double dt, double *out_3124841438364502345) {
  f_fun(state,  dt, out_3124841438364502345);
}
void live_F_fun(double *state, double dt, double *out_1516188799163097895) {
  F_fun(state,  dt, out_1516188799163097895);
}
void live_h_4(double *state, double *unused, double *out_5146405128764971715) {
  h_4(state, unused, out_5146405128764971715);
}
void live_H_4(double *state, double *unused, double *out_8280514637229318136) {
  H_4(state, unused, out_8280514637229318136);
}
void live_h_9(double *state, double *unused, double *out_6521535856256346272) {
  h_9(state, unused, out_6521535856256346272);
}
void live_H_9(double *state, double *unused, double *out_2879010501215786010) {
  H_9(state, unused, out_2879010501215786010);
}
void live_h_10(double *state, double *unused, double *out_7650523423264487676) {
  h_10(state, unused, out_7650523423264487676);
}
void live_H_10(double *state, double *unused, double *out_8349484776071401233) {
  H_10(state, unused, out_8349484776071401233);
}
void live_h_12(double *state, double *unused, double *out_1249483860836207293) {
  h_12(state, unused, out_1249483860836207293);
}
void live_H_12(double *state, double *unused, double *out_1899256260186585140) {
  H_12(state, unused, out_1899256260186585140);
}
void live_h_35(double *state, double *unused, double *out_9194488278142985817) {
  h_35(state, unused, out_9194488278142985817);
}
void live_H_35(double *state, double *unused, double *out_246461909527230721) {
  H_35(state, unused, out_246461909527230721);
}
void live_h_32(double *state, double *unused, double *out_703087583863910197) {
  h_32(state, unused, out_703087583863910197);
}
void live_H_32(double *state, double *unused, double *out_7428477456930016442) {
  H_32(state, unused, out_7428477456930016442);
}
void live_h_13(double *state, double *unused, double *out_1177272293085447184) {
  h_13(state, unused, out_1177272293085447184);
}
void live_H_13(double *state, double *unused, double *out_8170091630093444732) {
  H_13(state, unused, out_8170091630093444732);
}
void live_h_14(double *state, double *unused, double *out_6521535856256346272) {
  h_14(state, unused, out_6521535856256346272);
}
void live_H_14(double *state, double *unused, double *out_2879010501215786010) {
  H_14(state, unused, out_2879010501215786010);
}
void live_h_33(double *state, double *unused, double *out_3292218118027320547) {
  h_33(state, unused, out_3292218118027320547);
}
void live_H_33(double *state, double *unused, double *out_3397018914166088325) {
  H_33(state, unused, out_3397018914166088325);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
